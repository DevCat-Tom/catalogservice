spring:
  application:
    name: catalog-service
  lifecycle:
    # OnShutdown: spend processing all the pending requests within x sec
    # Update the Deployment manifest accordingly
    timeout-per-shutdown-phase: 15s
  config:
    import: "optional:configserver:" # If config server is running, get properties
  cloud:
    # **Configuration Server**
    config:
      uri: http://localhost:8888 # The URL of the configuration server
      request-connect-timeout: 5000 # waiting to connect to the config server (ms)
      request-read-timeout: 5000  # waiting to read configuration data from the config server (ms)
      fail-fast: false # Enables retry behavior!
      retry:
        max-attempts: 6
        initial-interval: 1000
        max-interval: 2000
        multiplier: 1.1 # On each retry: timeout = initial-interval * multiplier
  # **Database**
  datasource:
    username: user
    password: password
    url: jdbc:postgresql://localhost:5432/polardb_catalog # Which database you want to establish a connection
    hikari:
      connection-timeout: 2000 # Max time to get a connection from the pool
      maximum-pool-size: 5

# **This Server**
server:
  port: 9001
  shutdown: graceful
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50       # Time between accepting TCP connection and first HTTP request
      min-spare: 5  # Timeout between HTTP requests

# Enable actuator 'refresh' endpoint
management:
  endpoints:
    web:
      exposure:
        include: refresh

# **Custom Properties**
polar:
  greeting: Welcome to the local book catalog!